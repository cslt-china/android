package com.google.android.apps.signalong.jsonentities;

import android.os.Parcel;
import android.os.Parcelable;

import com.google.android.apps.signalong.api.ApiHelper;
import com.google.gson.annotations.SerializedName;
import java.util.List;

/**
 * The VideoListResponse class is the video data list result response body. This is autogenerated by
 * running GSON format plugin from Android Studio.
 */
public class VideoListResponse extends BaseResponse{

  /** The type of VideoStatus of a VideoListResponse DataBean object. */
  public enum VideoStatus {
    /* The request to get all videos of current user.*/
    ALL,
    /* The request to get of rejected videos current user.*/
    REJECTED,
    /* The request to get approved videos of current user.*/
    APPROVED,
    /* The request to get pending approval videos of current user.*/
    PENDING_APPROVAL
  }

  @SerializedName("data")
  private DataBeanList dataBeanList;

  public DataBeanList getDataBeanList() {
    return dataBeanList;
  }

  /** DataBeanList wraps multiple item data. */
  public static class DataBeanList {

    /* total is the total amount of video, not the size of the data that has already been loaded.*/
    private int total;
    private int next;
    private List<DataBean> data;

    public int getTotal() {
      return total;
    }

    public int getNext() {
      return next;
    }

    public void addAll(DataBeanList other) {
      if (this.data == null) {
        this.total = other.getTotal();
        this.data = other.getData();
        this.next = other.getNext();
      } else {
        this.total = this.total + other.getTotal();
        this.data.addAll(other.getData());
        this.next = this.data.size();
      }
    }

    public List<DataBean> getData() {
      return data;
    }

    public void setData(List<DataBean> data) {
      this.data = data;
    }

    /** The DataBean class is real data, that contains gloss id and gloss text. */
    public static class DataBean implements android.os.Parcelable {

      public static final Creator<DataBean> CREATOR =
          new Creator<DataBean>() {
            @Override
            public DataBean createFromParcel(Parcel source) {
              return new DataBean(source);
            }

            @Override
            public DataBean[] newArray(int size) {
              return new DataBean[size];
            }
          };

      @SerializedName("gloss_id")
      private int glossId;

      @SerializedName("gloss_text")
      private String glossText;

      @SerializedName("created_time")
      private int createdTime;

      @SerializedName("video_path")
      private String videoPath;

      @SerializedName("status")
      private String status;

      @SerializedName("review_summary")
      private ReviewCounterBean reviewCounter;

      private String uuid;
      private String thumbnail;

      public DataBean() {}

      protected DataBean(Parcel in) {
        this.glossId = in.readInt();
        this.glossText = in.readString();
        this.createdTime = in.readInt();
        this.videoPath = in.readString();
        this.uuid = in.readString();
        this.thumbnail = in.readString();
        this.status = in.readString();
        this.reviewCounter = in.readParcelable(ReviewCounterBean.class.getClassLoader());
      }

      @Override
      public int describeContents() {
        return 0;
      }

      @Override
      public void writeToParcel(Parcel dest, int flags) {
        dest.writeInt(this.glossId);
        dest.writeString(this.glossText);
        dest.writeInt(this.createdTime);
        dest.writeString(this.videoPath);
        dest.writeString(this.uuid);
        dest.writeString(this.thumbnail);
        dest.writeString(this.status);
        dest.writeParcelable(this.reviewCounter, flags);
      }

      public static class ReviewCounterBean implements Parcelable {

        @SerializedName("approved")
        private int approved;

        private int rejected;

        @Override
        public int describeContents() { return 0; }

        @Override
        public void writeToParcel(Parcel dest, int flags) {
          dest.writeInt(approved);
          dest.writeInt(rejected);
        }

        protected ReviewCounterBean(Parcel in) {
          this.approved = in.readInt();
          this.rejected = in.readInt();
        }

        static public final Parcelable.Creator CREATOR = new Parcelable.Creator() {
          public ReviewCounterBean createFromParcel(Parcel in) {
            return new ReviewCounterBean(in);
          }

          public ReviewCounterBean[] newArray(int size) {
            return new ReviewCounterBean[size];
          }
        };

        public int getApproved() { return approved; }
        public int getRejected() { return rejected; }
      }

      public String getGlossText() {
        return glossText;
      }

      public int getCreatedTime() {
        return createdTime;
      }

      public String getStatus() { return status; }

      public int getApprovedReviewCounter() { return reviewCounter.getApproved(); }
      public int getRejectedReviewCounter() { return reviewCounter.getRejected(); }

      public String getVideoPath() {
        if (videoPath.startsWith(ApiHelper.PROTOCOL)) {
          return videoPath;
        } else {
          return ApiHelper.MEDIA_BASE_URL + videoPath;
        }
      }

      public String getUuid() {
        return uuid;
      }

      public String getThumbnail() {
        if (thumbnail.startsWith(ApiHelper.PROTOCOL)) {
          return thumbnail;
        } else {
          return ApiHelper.MEDIA_BASE_URL + thumbnail;
        }
      }

    }
  }
}
